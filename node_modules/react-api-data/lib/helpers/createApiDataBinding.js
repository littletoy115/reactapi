"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var __1 = require("..");
var createApiDataRequest_1 = __importDefault(require("./createApiDataRequest"));
var getRequestKey_1 = require("./getRequestKey");
var BindingsStore = /** @class */ (function () {
    function BindingsStore() {
        this.bindingInstances = {};
    }
    BindingsStore.prototype.getBinding = function (endpointKey, params, dispatch, instanceId, apiData, request) {
        if (params === void 0) { params = {}; }
        if (instanceId === void 0) { instanceId = ''; }
        var requestKey = getRequestKey_1.getRequestKey(endpointKey, params, instanceId);
        if (!this.bindingInstances[requestKey]) {
            this.bindingInstances[requestKey] = createApiDataBinding(endpointKey, params, dispatch, this, instanceId);
        }
        return this.bindingInstances[requestKey](apiData, request);
    };
    return BindingsStore;
}());
exports.BindingsStore = BindingsStore;
var createApiDataBinding = function (endpointKey, bindingParams, dispatch, bindingsStore, instanceId) {
    if (bindingParams === void 0) { bindingParams = {}; }
    if (instanceId === void 0) { instanceId = ''; }
    var params = bindingParams;
    return function (apiData, request) { return ({
        data: __1.getResultData(apiData, endpointKey, params, instanceId),
        request: request || __1.getApiDataRequest(apiData, endpointKey, params, instanceId) || createApiDataRequest_1.default(endpointKey),
        perform: function (performParams, body) {
            params = __assign(__assign({}, bindingParams), performParams);
            return dispatch(__1.performApiRequest(endpointKey, params, body, instanceId, bindingsStore));
        },
        invalidateCache: function () { return dispatch(__1.invalidateApiDataRequest(endpointKey, params, instanceId)); },
        getInstance: function (newInstanceId) { return bindingsStore.getBinding(endpointKey, params, dispatch, newInstanceId, apiData); },
    }); };
};
//# sourceMappingURL=createApiDataBinding.js.map