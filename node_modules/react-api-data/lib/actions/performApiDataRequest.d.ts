import { ApiDataState } from '../reducer';
import { ApiDataBinding, ApiDataEndpointConfig, ApiDataGlobalConfig, EndpointParams } from '../index';
import { BindingsStore } from '../helpers/createApiDataBinding';
import { RequestHandler } from '../request';
import { Dispatch } from 'redux';
export declare const getRequestProperties: (endpointConfig: ApiDataEndpointConfig, globalConfig: ApiDataGlobalConfig, state: any, body?: any) => any;
/**
 * Manually trigger an request to an endpoint. Prefer to use {@link withApiData} instead of using this function directly.
 * This is an action creator, so make sure to dispatch the return value.
 */
export declare const performApiRequest: (endpointKey: string, params?: EndpointParams | undefined, body?: any, instanceId?: string, bindingsStore?: BindingsStore) => (dispatch: Dispatch<import("redux").AnyAction>, getState: () => {
    apiData: ApiDataState;
}) => Promise<ApiDataBinding<any>>;
/**
 * Use your own request function that calls the api and reads the responseBody response. Make sure it implements the
 * {@link RequestHandler} interface.
 * @param requestHandler
 */
export declare const useRequestHandler: (requestHandler: RequestHandler) => void;
