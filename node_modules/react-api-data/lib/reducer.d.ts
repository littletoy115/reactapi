import { ApiDataEndpointConfig, ApiDataGlobalConfig, ApiDataRequest, EndpointParams, NetworkStatus } from './index';
import { ConfigureApiDataAction } from './actions/configureApiData';
import { ApiDataSuccessAction } from './actions/apiDataSuccess';
import { ApiDataFailAction } from './actions/apiDataFail';
import { InvalidateApiDataRequestAction } from './actions/invalidateApiDataRequest';
import { ApiDataAfterRehydrateAction } from './actions/afterRehydrate';
import { PurgeApiDataAction } from './actions/purgeApiData';
interface Entities {
    [type: string]: {
        [id: string]: any;
    };
}
export interface ApiDataState {
    globalConfig: ApiDataGlobalConfig;
    endpointConfig: {
        [endpointKey: string]: ApiDataEndpointConfig;
    };
    requests: {
        [requestKey: string]: ApiDataRequest;
    };
    entities: Entities;
}
export declare const defaultState: {
    globalConfig: {};
    endpointConfig: {};
    requests: {};
    entities: {};
};
export interface ClearApiDataAction {
    type: 'CLEAR_API_DATA';
}
export interface FetchApiDataAction {
    type: 'FETCH_API_DATA';
    payload: {
        requestKey: string;
        endpointKey: string;
        params?: EndpointParams;
        url: string;
    };
}
export declare type Action = ConfigureApiDataAction | FetchApiDataAction | ApiDataSuccessAction | ApiDataFailAction | InvalidateApiDataRequestAction | ClearApiDataAction | ApiDataAfterRehydrateAction | PurgeApiDataAction;
declare const _default: (state: ApiDataState | undefined, action: Action) => ApiDataState;
export default _default;
export declare const addEntities: (entities: Entities, newEntities: Entities) => Entities;
export declare const recoverNetworkStatus: (networkStatus: NetworkStatus) => NetworkStatus;
export declare const recoverNetworkStatuses: (requests: {
    [requestKey: string]: ApiDataRequest;
}) => {
    [requestKey: string]: ApiDataRequest;
};
